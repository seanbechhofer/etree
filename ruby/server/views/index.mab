h1 "About"
div do
  p "This demo illustrates query over our Linked Data conversion of the Internet Archive's Live Music Archive (LMA) metadata. The LMA contains some 100,000 live recorded performances, recorded with the consent of the artists. Metadata describing the event is included, largely as free text."

  p "Metadata conversion was done by downloading the XML metadata descriptions, converting this into an RDF representation, then using some simple techniques to try and align:"
  ul do
    li "Artists with Artists in MusicBrainz;"
    li "Geographical locations with locations in GeoNames (a standardised gazeteer);"
    li "Venues with venues in last.fm"
  end

  p "This then allows us to query the collection using information associated with those external data sources, for example using MusicBrainz tags to find artists. The metadata is quite dirty, though, and further cleaning needs to be done. We also plan to extract further information, for example about the lineage of the recordings, which is again encoded in free text."
   
  p "The hope is that this additional metadata will allow us to extract subcollections that can be used for MIR tasks."

  p "Interesting things about the data set are:"
  ul do
    li "Access to audio files."
    li "Multiple performances by artists."
    li "The presence of cover versions, which often appear in live sets."
  end
end

h1 "Search"
div.search do
  p "Search for artists, events or locations in the catalogue. Searching is case insensitive and can include regular expressions. Genre search is based on MusicBrainz tags associated with artists mapped to MusicBrainz. "
  form :action => "search" do 
    input :type => "text", :name => "query", :size => "40"
    input "Artists", :type => "radio", :name => "type", :value => "artist", :checked => true
    input "Events", :type => "radio", :name => "type", :value => "event"
    input "Tracks", :type => "radio", :name => "type", :value => "track"
    input "Locations", :type => "radio", :name => "type", :value => "geo"
    input "Genre", :type => "radio", :name => "type", :value => "genre"
    select :class => "select", :name=> "genre" do
      tags.each do |tag|
        option tag[:tn]
      end
    end
    input :class => "button", :type => "submit", :value => "Go!"
  end
end

