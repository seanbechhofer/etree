script do 
  <<END
     // Load the Visualization API and the piechart package.
     google.load('visualization', '1.0', {'packages':['corechart']});
     
     // Set a callback to run when the Google Visualization API is loaded.
     google.setOnLoadCallback(getData);
     
     function getData() {
           var data = $.getJSON("/years/",
                                 {},
                                 function(data) {
           console.log('data = ', data);
           var years = data["year.summary"]
	   yearTable = new google.visualization.DataTable();
           yearTable.addColumn('string', 'Year');
           yearTable.addColumn('number', 'Events');
	   for (var i=0; i< years.length; i++) {
	     if (years[i].year) {			  
	     yearTable.addRow([years[i].year,parseInt(years[i].performances)]);
             }
	   }			  

	   // Set chart options
           var columnChartOptions = {title:'Performances By Year',
			       height:400,
                               hAxis:{slantedText:true, slantedTextAngle:45},
                               bar: {groupWidth: "95%"},
           };
				  
           var column = new google.visualization.ColumnChart(document.getElementById('years'));
	   column.draw(yearTable, columnChartOptions);

	   });
       
           // Get mapping summaries
           var mdata = $.getJSON("/mappings",
                                 {},
                                 function(mdata) {
           console.log('mdata = ', mdata);
	   mappingTable = new google.visualization.DataTable();
           mappingTable.addColumn('string', 'Category');
           mappingTable.addColumn('number', 'Count');
           mappingTable.addRow(['No Mapping',parseInt(mdata["none"])]);
           mappingTable.addRow(['MusicBrainz',parseInt(mdata["mb"])]);
           mappingTable.addRow(['last.fm',parseInt(mdata["lfm"])]);
           mappingTable.addRow(['setlist.fm',parseInt(mdata["slfm"])]);

	   // Set chart options
           var mcolumnChartOptions = {title:'Artist Mappings',
			       height:400,
                               hAxis:{slantedText:true, slantedTextAngle:45},
                               bar: {groupWidth: "95%"},
           };
				  
           var mcolumn = new google.visualization.ColumnChart(document.getElementById('mappings'));
	   mcolumn.draw(mappingTable, mcolumnChartOptions);

	   });

     }

END
end

div.container do
  
  div.row do # Search
    div :class => "col-md-12" do 
      h1 "Search"
    end
    div :class => "col-md-12" do
      div do
        form :action => "search", :class => "form-horizontal" do 
          div :class => 'form-group' do
            label "Search:", :class => "col-sm-1 control-label"
            div :class => "col-sm-1" do
              select :class => "form-control", :name => "type" do
                option "Artists", :value => "artist"
                option "Events", :value => "event"
                option "Tracks", :value => "track"
                option "Locations", :value => "geo"
              end
            end
            div :class => "col-sm-5" do
              input :type => "text", :class => "form-control", :name => "query"
            end
            div :class => "col-sm-1" do
              button :type => "submit", :class => "btn btn-primary" do
                span "Search" #:class => "glyphicon glyphicon-search"
              end
            end
            div :class => "col-sm-4" do
              p "Search for artists, events or locations in the catalogue. Searching is case insensitive and can include regular expressions."
            end
          end
        end
      end
      hr
      form :action => "search", :class => "form-horizontal" do 
        div :class => 'form-group' do
          label "Genre:", :class => "col-sm-1 control-label"
          div :class => "col-sm-6" do
            select :class => "form-control", :name => "genre" do
              tags.each do |tag|
                option tag[:tn]
              end
            end
          end
          div :class => "col-sm-1" do
            button :type => "submit", :class => "btn btn-primary" do
              span "Search" #:class => "glyphicon glyphicon-search"
            end
          end
          div :class => "col-sm-4" do
            p "Genre search is based on MusicBrainz tags associated with artists mapped to MusicBrainz. "
          end
        end
        input :type => "hidden", :name => "type", :value => "genre"
      end
    end 
  end # Search
  
  div.row do # About
    div.send(:'col-md-12') do 
      h1 "About"
      div do
        p "This demo illustrates query over our Linked Data conversion of the Internet Archive's Live Music Archive (LMA) metadata. The LMA contains some 100,000 live recorded performances, recorded with the consent of the artists. Metadata describing the event is included, largely as free text."
      end
      h2 "Overview Statistics" 
      div.send(:'col-md-8') do
        div :id => "years" do
          p "Loading....."
        end
        # div do
        #   span do
        #     strong "Performances by Year"
        #   end
        # end
      end
      div.send(:'col-md-4') do
        div :id => "mappings" do
          p "Loading....."
        end
        # div do
        #   span do
        #     strong "Performances by Year"
        #   end
        # end
      end
      h2 "Conversion"
      div do
        p "Metadata conversion was done by downloading the XML metadata descriptions, converting this into an RDF representation, then using some simple techniques to try and align:"
        ul do
          li "Artists with Artists in MusicBrainz;"
          li "Geographical locations with locations in GeoNames (a standardised gazeteer);"
          li "Venues with venues in last.fm"
        end
        
        p "This then allows us to query the collection using information associated with those external data sources, for example using MusicBrainz tags to find artists. The metadata is quite dirty, though, and further cleaning needs to be done. We also plan to extract further information, for example about the lineage of the recordings, which is again encoded in free text."
        
        p "The hope is that this additional metadata will allow us to extract subcollections that can be used for MIR tasks."
        
        p "Interesting things about the data set are:"
        ul do
          li "Access to audio files."
          li "Multiple performances by artists."
          li "The presence of cover versions, which often appear in live sets."
        end
      end
    end 
  end # About

end
